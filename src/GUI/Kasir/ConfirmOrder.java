/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.Kasir;

import Dao.MenuDao;
import java.awt.Component;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.BoxLayout;
import javax.swing.Icon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import Model.PesananModel;
import Model.TempModel;
import java.awt.BorderLayout;
import java.awt.FlowLayout;
import javax.swing.ImageIcon;
import javax.swing.JSeparator;

/**
 *
 * @author USER
 */
public class ConfirmOrder extends javax.swing.JFrame {    
    
    //TODO buat contstuctor parameter pakai arraylist

    private static void addAButton(String text,JPanel pane) {
        JButton button = new JButton(text);
        button.setAlignmentX(Component.CENTER_ALIGNMENT);
        pane.add(button);
    }
    
     private static void addButtonDelete(JPanel parent, JPanel child) {
        JButton button = new JButton("X");
        //button.setAlignmentY(Component.CENTER_ALIGNMENT);
        button.setPreferredSize(new Dimension(38, 32));
        button.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                parent.remove(child);
            }
        });
        child.add(button);
    }


     
       private static void addLabelToPanel(String text, JPanel pane) {
        JLabel label = new JLabel(text);
        label.setAlignmentY(Component.CENTER_ALIGNMENT);
        pane.add(label);
    }
       
        private static void addPhotoToPanel(byte[] img, JPanel pane) {
        ImageIcon image = new ImageIcon(img);
        JLabel label = new JLabel(image);
        label.setPreferredSize(new Dimension(34, 16));
        label.setAlignmentY(Component.CENTER_ALIGNMENT);
        pane.add(label);
    }
    

    /**
     * Creates new form ConfirmOrder
     */
    public ConfirmOrder() {
        initComponents();
    }
    
    public static void addComponentsToPane(final Container pane) {
        final JPanel content = new JPanel();
        content.setLayout(new BoxLayout(content, BoxLayout.Y_AXIS));
        JPanel controls = new JPanel();
        controls.setLayout(new GridLayout(0,2));
        JButton backToMenu = new JButton("Tambah Pesanan");
        JButton cetakNota = new JButton("Cetak Nota");
        
        
        //looping panel sesuai size pesanan(bisa pakai arraylist.size)
        MenuDao dao = new MenuDao();
        
        ArrayList<PesananModel> pesanan= new ArrayList<>();
        TempModel temp = new TempModel();
       
        pesanan.stream().map((pes) -> {
            String namaMenu = dao.getList().get(pes.getMenu_id_menu()).getNama();
            int hargasatu = dao.getList().get(pes.getMenu_id_menu()).getHarga();
            byte[] foto = dao.getList().get(pes.getMenu_id_menu()).getImage();
            int jumlah = pes.getJumlah();
            int hargaBayar = hargasatu * jumlah;
            temp.setHargaBayar(temp.getHargaBayar()+hargaBayar);
            //String menu = dao.byId(pes.getMenu_id_menu()).getNama();
            JPanel panelPesanan = new JPanel();
            panelPesanan.setLayout(new FlowLayout());
            addPhotoToPanel(foto, panelPesanan);
            addLabelToPanel(namaMenu, panelPesanan);//(set nama menu)
            addLabelToPanel(String.valueOf(jumlah), panelPesanan);
            addLabelToPanel(String.valueOf(hargasatu), panelPesanan);
            return panelPesanan;
        }).map((panelPesanan) -> {
            addButtonDelete(content,panelPesanan);
            return panelPesanan;
        }).forEach((panelPesanan) -> {
            content.add(panelPesanan);
        });
         
        // add button for checkout and add pesanan
        controls.add(backToMenu);
        controls.add(cetakNota);
        
        pane.add(content, BorderLayout.NORTH);
        pane.add(new JSeparator(), BorderLayout.CENTER);
        pane.add(controls, BorderLayout.SOUTH);

    }
    
    private static void createAndShowGUI() {
        //Create and set up the window.
        JFrame frame = new JFrame("Halaman confirm pesanan");
        frame.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);

        //Set up the content pane.
        addComponentsToPane(frame.getContentPane());

        //Display the window.
        frame.pack();
        frame.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConfirmOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConfirmOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConfirmOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConfirmOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConfirmOrder().setVisible(false);
                createAndShowGUI();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
